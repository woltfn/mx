#!/bin/bash

if [ $(id -u) -eq 0 ]
then
	clear
else
	if echo $(id) |grep sudo > /dev/null
	then
	clear
	echo "Voce não é root"
	echo "Seu usuario esta no grupo sudo"
	echo -e "Para virar root execute \033[1;31msudo su\033[0m"
	exit
	else
	clear
	echo -e "Vc nao esta como usuario root, nem com seus direitos (sudo)\nPara virar root execute \033[1;31msu\033[0m e digite sua senha root"
	exit
	fi
fi
#################################
detalhes () {
if [ "$1" = "1" ]; then
usr="USUARIO"
sen=""
dat=""
lim=""
fi
if [ "$1" = "2" ]; then
usr="USUARIO"
sen="SENHA"
dat=""
lim=""
fi
if [ "$1" = "3" ]; then
usr="USUARIO"
sen="SENHA"
dat="DATA"
lim=""
fi
if [ "$1" = "4" ]; then
usr="USUARIO"
sen="SENHA"
dat="DATA"
lim="LIMITE"
fi
clear
touch /tmp/ussh
cat /etc/passwd |grep -v ovpn > /tmp/ussh
echo -e "\033[1;30m------------------------------------------------------------\033[0m"
echo -e "\033[42;30m $usr               $sen               $dat          $lim\033[0m"
echo -e "\033[1;30m------------------------------------------------------------\033[0m"
for users in `awk -F : '$3 > 900 { print $1 }' /tmp/ussh |grep -v "nobody" |grep -vi polkitd |grep -vi system-`
do

if cat /etc/VpsPackdir/limite/$users > /dev/null 2> /dev/null
then
limitecs=$(cat /etc/VpsPackdir/limite/$users)
else
limitecs="null"
fi

if  senha=$(cat /etc/VpsPackdir/senha/$users > /dev/null 2> /dev/null)
then
senha=$(cat /etc/VpsPackdir/senha/$users)
else
senha="null"
fi

data=$(chage -l $users |grep -i co |awk -F : '{print $2}')
if [ $data = never ] 2> /dev/null
then
data="Nunca"
fi
detalhesdata=$(printf '%-18s' "$data")
detalheslimit=$(printf '%-10s' "$limitecs")
detalhes=$(printf ' %-21s' "$users")
detalhespass=$(printf '%-18s' "$senha")
if [ "$1" = "1" ]; then
echo -e "\033[1;33m$detalhes\033[0m"
fi
if [ "$1" = "2" ]; then
echo -e "\033[1;33m$detalhes $detalhespass\033[0m"
fi
if [ "$1" = "3" ]; then
echo -e "\033[1;33m$detalhes $detalhespass $detalhesdata\033[0m"
fi
if [ "$1" = "4" ]; then
echo -e "\033[1;33m$detalhes $detalhespass $detalhesdata  $detalheslimit\033[0m"
fi
echo -e "\033[1;30m------------------------------------------------------------\033[0m"
done
rm -rf /tmp/ussh
}
############FIMFUNCAO
if [ -d /etc/VpsPackdir ]
then
echo ""
else
mkdir /etc/VpsPackdir
fi

if [ -d /etc/VpsPackdir/senha ]
then
echo ""
else
mkdir /etc/VpsPackdir/senha
fi

if [ -d /etc/VpsPackdir/limite ]
then
echo ""
else
mkdir /etc/VpsPackdir/limite
fi

clear
if [ "$1" = "" ]; then
sso=$(cat -n /etc/issue |grep 1 |cut -d' ' -f6,7,8 |sed 's/1//' |sed 's/      //')
echo -e "\033[1;31mSEU SISTEMA $sso"
echo -e "\033[36;37m PAINEL DE GERENCIAMENTO DA VPS\033[0m"
echo -e "\033[0;35m------------------------------------------------------------\033[0m"
echo -e "\033[1;36m[\033[1;31m1\033[1;36m] CRIAR USUARIO \033[1;30m(cria usuarios sem root)\033[1;36m

[\033[1;31m2\033[1;36m] CRIAR USUARIO TEMPORARIO \033[1;30m(Usuário por minutos)\033[1;36m
[\033[1;31m3\033[1;36m] REMOVER USUARIO \033[1;30m(remove usuarios sem root)\033[1;36m
[\033[1;31m4\033[1;36m] REDEFENIR USUARIO \033[1;30m(redefinir usuarios)\033[1;36m
[\033[1;31m5\033[1;36m] ADICIONAR HOST \033[1;30m(Adiciona host para payloads)\033[1;36m
[\033[1;31m6\033[1;36m] REMOVER HOST \033[1;30m(Remove host das Payloads)\033[1;36m
[\033[1;31m7\033[1;36m] BANNER \033[1;30m( mudar banner da vps)\033[1;36m
[\033[1;31m8\033[1;36m] TESTE DE VELOCIDADE \033[1;30m(teste de velocidade do servidor)\033[1;36m
[\033[1;31m9\033[1;36m] LIMPAR VENCIDOS \033[1;30m(Cleaner de usuarios vencidos)\033[1;36m
[\033[1;31m10\033[1;36m] DETALHES DOS USUARIOS \033[1;30m(detalhes...)\033[1;36m
[\033[1;31m11\033[1;36m] MUDAR COMANDO ADM \033[1;30m(muda o comando)\033[1;36m
[\033[1;31m12\033[1;36m] \033[1;31mMENU SSHMON \033[1;30m(monitor)\033[1;36m
[\033[1;31m13\033[1;36m] MENU OPENVPN \033[1;30m(Gerenciamento OPENVPN)\033[1;36m
[\033[1;31m14\033[1;36m] MENU UDP \033[1;30m(ferramentas administrativas)\033[1;36m
[\033[1;31m15\033[1;36m] MONITOR\033[1;30m(MONITOR USUARIO ONLINE)\033[1;36m
[\033[1;31m16\033[1;36m] LIMITER\033[1;30m(KILL MULT LOGUIN) \033[0m"
echo -e "\033[0;35m------------------------------------------------------------\033[0m"
echo -e "\033[1;36mQUAL E A SUA OPÇAO?\033[0m"
read -p ": " opcao
else
opcao="$1"
fi
case $opcao in
  1)
  clear 
echo -e "\033[1;32m------------------------------------------------------------\033[0m"
echo -e "\033[1;31m   ESSES SAO OS USUARIOS  JA CADASTRADOS NO SEU SISTEMA!\033[0m"
echo -e "\033[1;32m------------------------------------------------------------\033[0m"
for users in `awk -F : '$3 > 900 { print $1 }' /etc/passwd |grep -v "nobody" |grep -vi polkitd |grep -vi system-`
do
echo -e "\033[1;31m                        $users\033[0m"
done
echo -e "\033[1;32m------------------------------------------------------------\033[0m"
mkdir /etc/VpsPackdir 1>/dev/null 2>/dev/null
mkdir /etc/VpsPackdir/senha 1>/dev/null 2>/dev/null
if [ $(id -u) -eq 0 ]
then
	echo -e "\033[1;32mNome do novo usuario:\033[0;37m"; read -p " " name
if [ "$name" = "" ]; then
echo -e "\033[1;31mUM USUARIO SEM NOME NAO PODE SER CRIADO!\033[0m"
sleep 4s
adm
exit
fi
echo -e "\033[1;32mSenha para o usuario $name:\033[0;37m"; read -p " " pass
###data###
echo -e "\033[1;31mDefinir data e Limite Para $name? 
[s/n]\033[0m"
read -p ": " simounao
    if [ "$simounao" = "s" ]
then
	echo -e "\033[1;32mQuantos dias usuario $name deve durar:\033[0;37m"; read -p " " daysrnf
	echo -e "\033[1;32mQuantas conexoes?\033[0;37m"; read -p " " limitao
echo -e "\033[0m"
limit="$limitao"
   else
limit="999"
daysrnf="90"
fi
	if cat /etc/passwd |grep $name: |grep -vi [a-z]$name |grep -v [0-9]$name > /dev/null
	then
		echo -e "\033[1;31mUsuario $name ja existe\033[0m"
	else
		valid=$(date '+%C%y-%m-%d' -d " +$daysrnf days")
		datexp=$(date "+%d/%m/%Y" -d "+ $daysrnf days")
		useradd -M -s /bin/false $name -e $valid
		(echo $pass; echo $pass)|passwd $name 2>/dev/null
	    echo "$pass" > /etc/VpsPackdir/senha/$name
    	fi
fi				
if [ "$simounao" = "s" ]
then
echo "$limit" > /etc/VpsPackdir/limite/$name
     echo -e "\033[1;36mUsuario: \033[0m$name"
 		echo -e "\033[1;36mLimit: \033[0m$limit"
		echo -e "\033[1;36mSenha: \033[0m$pass"
		echo -e "\033[1;36mValidade: \033[0m$datexp"
else
     echo -e "\033[1;36mUsuario: \033[0m$name"
		echo -e "\033[1;36mSenha: \033[0m$pass"
     echo -e "\033[1;36mValidade: \033[0m$datexp"
fi
echo -e "\033[1;36mCRIADO COM SUCESSO \033[0m"
sleep 4s
adm
exit
;;
 2)
  clear 
echo -e "\033[1;32m------------------------------------------------------------\033[0m"
echo -e "\033[1;31m   CRIADOR DE USUARIOS TEMPORARIOS...\033[1;33m
ESSES SAO OS USUARIOS  JA CADASTRADOS NO SEU SISTEMA!\033[0m"
echo -e "\033[1;32m------------------------------------------------------------\033[0m"
for users in `awk -F : '$3 > 900 { print $1 }' /etc/passwd |grep -v "nobody" |grep -vi polkitd |grep -vi system-`
do
echo -e "\033[1;31m                        $users\033[0m"
done
echo -e "\033[1;32m------------------------------------------------------------\033[0m"
usrtemp
adm
;;
 3)
  clear
detalhes 3
  echo -e "\033[1;31mQUAL O USUARIO QUE DESEJA REMOVER?\033[0m"
read -p "Usuário: " usuario2
sleep 1s
if [ "$usuario2" = "" ]
then
echo -e "\033[1;31mNenhum usuario foi digitado\033[0m"
sleep 4s
adm
exit
else
touch /tmp/bmw
cat /etc/passwd  > /tmp/bmw
bmw=$(cat /tmp/bmw |egrep -o $usuario2)
if [ "$bmw" = "" ]
then
echo -e "\033[1;31mUsuario NAO Existe!\033[0m"
rm -rf /tmp/bmw
adm
exit
 fi
fi
rm -rf /tmp/bmw
userdel $usuario2 > /dev/null
rm -rf /etc/VpsPackdir/usuario/$usuario2 > /dev/null
rm -rf /etc/VpsPackdir/limite/$usuario2 > /dev/null
echo -e "\033[1;31mUSUARIO REMOVIDO\033[0m"
read -p "ENTER "
sleep 1s
  adm
  exit;;
 4)
clear
detalhes 3
UserRedefine
adm
exit;;
 5)
  add-host
  sleep 2s
  adm
  exit;;
 6)
  del-host
  sleep 2s
  adm
  exit;;
 7)
  clear
  banner
  echo -e "\033[1;31mPARA VOLTAR PRESSIONE ENTER\033[0m"
read -p " "
sleep 1s
  clear
  adm
  exit;;
 8)
clear
echo -e "\033[1;31mCarregando...\033[0m"
ping=$(ping -c1 google.com |awk '{print $8 $9}' |grep -v loss |cut -d = -f2 |sed ':a;N;s/\n//g;ta')
echo "Ping: $ping"
velo=$(speedtest.py |grep load:)
echo "$velo"
  sleep 3s
  echo -e "\033[1;31mPARA VOLTAR PRESSIONE ENTER\033[0m"
read -p " "
sleep 1s
  adm
  exit;;
 9)
   clear
expcleaner
  adm
  exit;;
 10)
detalhesusers
adm
exit;;
 11)
if [[ -e /bin/antigo ]]; then
antigo > /dev/null
rm -rf /bin/antigo > /dev/null
 else
echo " "
clear
fi
echo -e "\033[1;33m"
read -p "Qual o nome do novo comando?: " cmdo
echo -e "\033[0m"
if [[ -e /bin/$cmdo ]]; then
echo -e "Comando $cmdo ja Existente"
adm
exit
 else
echo -e "Mudando comando"
fi
touch /bin/$cmdo > /dev/null
sleep 1s
echo "#!/bin/bash
if [ '$1' = '' ]; then
adm
else
adm $1
fi
exit" >> /bin/$cmdo
echo -e "\033[1;33mO Novo Comando e:\033[1;31m $cmdo \033[1;33mObrigado por usar Adm Manager\033[0m"
sleep 1s
touch /bin/antigo
sleep 1s
##
echo "#!/bin/bash
sleep 1s
clear
rm -rf /bin/$cmdo" >> /bin/antigo
##
 echo -e "\033[1;31mPARA VOLTAR PRESSIONE ENTER\033[0m"
chmod 777 /bin/$cmdo
chmod 777 /bin/antigo
read -p " "
sleep 1s
adm
  exit;;
 12)
sshmon
exit;;
 13)
ovpn
exit;;
 14)
vpnbad
exit;;
 15)
monitor
echo -e "\033[1;31mPARA VOLTAR PRESSIONE ENTER\033[0m"
read -p " "
adm
exit;;
 16)
echo -e "\033[1;36mPARA VOLTAR PRESSIONE NA SESSAO SCREN \033[1;31mENTER\033[0m"
read -p "APERTE ENTER PARA PROSSEGUIR COM O LIMITER "
limiter
adm
 ;;
 *)
tput setaf 7 ; tput setab 4 ; tput bold ; printf '%44s%s%-20s\n' "OPÇÃO INVÁLIDA..." ; tput sgr0
sleep 1
exit;;
